<Controls:MetroWindow x:Class="MethodStore.WindowObjectMethod"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MethodStore"
        xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:s="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        x:Name="FormObjectMethod"
        Title="Метод" Height="600" Width="900" MinHeight="400" MinWidth="800" 
        Background="Teal" Topmost="True"
        Loaded="FormObjectMethod_Loaded"
        Closed="FormObjectMethod_Closed">

    <Controls:MetroWindow.CommandBindings>
        <CommandBinding x:Name="WindowClose" Executed="WindowCommandCloseForm_Executed" Command="ApplicationCommands.Close"/>
        <CommandBinding x:Name="WindowSaveObject" Executed="WindowCommandSaveObject_Executed" Command="ApplicationCommands.Save"/>
    </Controls:MetroWindow.CommandBindings>

    <Controls:MetroWindow.InputBindings>
        <KeyBinding Key="Esc" Command="ApplicationCommands.Close"/>
        <KeyBinding Key="Enter" Modifiers="Ctrl" Command="ApplicationCommands.Close"/>
    </Controls:MetroWindow.InputBindings>

    <Controls:MetroWindow.Resources>

        <!--DataGrid-->
        <Style x:Key="DataGridStyleColumnHeader" BasedOn="{StaticResource MetroDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Background" Value="LightSteelBlue"/>
            <Setter Property="BorderBrush" Value="Teal"/>
        </Style>
        <Style x:Key="DataGridStyleRow" BasedOn="{StaticResource MetroDataGridRow}" TargetType="{x:Type DataGridRow}">
            <Setter Property="Background" Value="LightSteelBlue"/>
        </Style>

        <!--StackPanelTextTemplate-->
        <Style x:Key="StackPanelTextTemplate" TargetType="{x:Type StackPanel}">
            <Setter Property="StackPanel.IsEnabled" Value="False"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=AddToTextTemplate}" Value="True">
                    <Setter Property="StackPanel.IsEnabled" Value="True"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </Controls:MetroWindow.Resources>

    <Grid>
        <Separator Height="5" Background="{x:Null}"/>
        <StackPanel Orientation="Horizontal">
            <Separator Width="5" Background="{x:Null}"/>
            <StackPanel Orientation="Vertical">

                <Separator Height="1" Background="{x:Null}"/>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                    <Separator Width="1" Background="{x:Null}"/>
                    <Button x:Name="ButtonSave" Content="Записать" Background="LightSteelBlue"
                            Click="ButtonSave_Click"/>
                    <Separator Width="3" Background="{x:Null}"/>
                    <Button x:Name="ButtonParseClipboard" Content="Получить из буфера обмена" Background="LightSteelBlue"
                            Click="ButtonParseClipboard_Click"/>
                    <Separator Width="1" Background="{x:Null}"/>
                </StackPanel>

                <Separator Height="1" Background="{x:Null}"/>

                <StackPanel Orientation="Horizontal">

                    <StackPanel x:Name="StackPanelLeft" Orientation="Vertical"
                                Width="{Binding Path=ActualWidth, ElementName=FormObjectMethod, Converter={local:ElementsFormConverter}, ConverterParameter='400'}">

                        <StackPanel Orientation="Horizontal">
                            <Label Content="Вызов метода" MinWidth="90"/>
                            <StackPanel Orientation="Horizontal">
                                <TextBox x:Name="TextBoxMethodInvokationString" Text="{Binding Path=MethodInvokationString}" Background="LightSteelBlue" BorderBrush="Teal" IsReadOnly="True" VerticalContentAlignment="Center"
                                         Width="{Binding Path=ActualWidth, ElementName=StackPanelLeft, Converter={local:ElementsFormConverter}, ConverterParameter='90'}">
                                    <TextBox.Style>
                                        <Style TargetType="TextBox">
                                            <Setter Property="ToolTip">
                                                <Setter.Value>
                                                    <ToolTip Content="{Binding Path=MethodInvokationString}" Background="#FF6ABAC9"/>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                                <Button x:Name="ButtonCopyToClipBoard" Content="Copy" Background="LightSteelBlue" BorderBrush="Teal" 
                                        Click="ButtonCopyToClipBoard_Click">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource MetroButton}">
                                            <Style.Triggers>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="FontWeight" Value="ExtraBold"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </StackPanel>
                        </StackPanel>

                        <Separator Height="1" Background="{x:Null}"/>

                        <StackPanel Orientation="Horizontal">
                            <Label Content="Тип метода" MinWidth="90"/>
                            <ComboBox x:Name="ComboBoxTypeMethods" Background="LightSteelBlue"
                                      SelectedItem="{Binding Path=TypeMethods}" 
                                      Width="{Binding Path=ActualWidth, ElementName=StackPanelLeft, Converter={local:ElementsFormConverter}, ConverterParameter='90'}" 
                                      SelectionChanged="ComboBoxTypeMethods_SelectionChanged">
                                <ComboBox.GroupStyle>
                                    <GroupStyle>
                                        <GroupStyle.HeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Name}"/>
                                            </DataTemplate>
                                        </GroupStyle.HeaderTemplate>
                                    </GroupStyle>
                                </ComboBox.GroupStyle>
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </StackPanel>

                        <Separator Height="1" Background="{x:Null}"/>

                        <StackPanel Orientation="Horizontal">
                            <Label Content="Модуль" MinWidth="90"/>
                            <TextBox x:Name="TextBoxModule" Text="{Binding Path=Module, UpdateSourceTrigger=PropertyChanged}" Background="LightSteelBlue" BorderBrush="Teal" 
                                     Width="{Binding Path=ActualWidth, ElementName=StackPanelLeft, Converter={local:ElementsFormConverter}, ConverterParameter='90'}"
                                     TextChanged="TextBoxModule_TextChanged" TabIndex="0">
                                <TextBox.Style>
                                    <Style TargetType="TextBox">
                                        <Setter Property="ToolTip">
                                            <Setter.Value>
                                                <ToolTip Content="{Binding Path=Module}" Background="#FF6ABAC9"/>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </StackPanel>

                        <Separator Height="1" Background="{x:Null}"/>

                        <StackPanel Orientation="Horizontal">
                            <Label Content="Имя метода" MinWidth="90"/>
                            <TextBox x:Name="TextBoxMethodName" Text="{Binding Path=MethodName, UpdateSourceTrigger=PropertyChanged}" Background="LightSteelBlue" BorderBrush="Teal"
                                     Width="{Binding Path=ActualWidth, ElementName=StackPanelLeft, Converter={local:ElementsFormConverter}, ConverterParameter='90'}"
                                     TextChanged="TextBoxMethodName_TextChanged" TabIndex="1">
                                <TextBox.Style>
                                    <Style TargetType="TextBox">
                                        <Setter Property="ToolTip">
                                            <Setter.Value>
                                                <ToolTip Content="{Binding Path=MethodName}" Background="#FF6ABAC9"/>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </StackPanel>

                        <Separator Height="1" Background="{x:Null}"/>

                        <StackPanel Orientation="Horizontal">
                            <Label Content="Описание" MinWidth="90"/>
                            <TextBox Text="{Binding Path=Description}" Background="LightSteelBlue" BorderBrush="Teal" TabIndex="2"
                                     Width="{Binding Path=ActualWidth, ElementName=StackPanelLeft, Converter={local:ElementsFormConverter}, ConverterParameter='90'}">
                                <TextBox.Style>
                                    <Style TargetType="TextBox">
                                        <Setter Property="ToolTip">
                                            <Setter.Value>
                                                <ToolTip Content="{Binding Path=Description}" Background="#FF6ABAC9"/>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </StackPanel>

                    </StackPanel>

                    <Separator Width="5" Background="{x:Null}"/>

                    <StackPanel x:Name="StackPanelTopRight" Orientation="Vertical"
                                Width="375">

                        <StackPanel Orientation="Horizontal">
                            <Label Content="Включать в шаблоны текста" MinWidth="190"/>
                            <CheckBox Background="LightSteelBlue" IsChecked="{Binding Path=AddToTextTemplate}"/>
                        </StackPanel>

                        <Separator Height="1" Background="{x:Null}"/>

                        <StackPanel x:Name="StackPanelTextTemplate" Orientation="Vertical" Style="{StaticResource StackPanelTextTemplate}">

                            <StackPanel Orientation="Horizontal">
                                <Label Content="Добавлять в контекстное меню" MinWidth="190"/>
                                <CheckBox Background="LightSteelBlue" IsChecked="{Binding Path=AddToContextMenu}"/>
                            </StackPanel>

                            <Separator Height="1" Background="{x:Null}"/>

                            <StackPanel Orientation="Horizontal">
                                <Label Content="Название" MinWidth="120"/>
                                <TextBox Background="LightSteelBlue" Text="{Binding Path=Name}" Width="255"/>
                            </StackPanel>

                            <Separator Height="1" Background="{x:Null}"/>

                            <StackPanel Orientation="Horizontal">
                                <Label Content="Строка автозамены" MinWidth="120"/>
                                <TextBox Background="LightSteelBlue" Text="{Binding Path=TextAutoCorrect}" Width="255"/>
                            </StackPanel>

                        </StackPanel>

                    </StackPanel>

                </StackPanel>

                <Separator Height="1" Background="{x:Null}"/>

                <StackPanel Orientation="Horizontal">
                    <Label Content="Параметры" MinWidth="90"/>
                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal">
                            <Separator Width="1" Background="{x:Null}"/>
                            <Button x:Name="ButtobAddParameter" Content="Добавить" Background="LightSteelBlue" BorderBrush="Teal"
                                    Click="ButtobAddParameter_Click" TabIndex="3"/>
                            <Separator Width="1" Background="{x:Null}"/>
                            <Button x:Name="ButtonDeleteParameter" Content="Удалить" Background="LightSteelBlue" BorderBrush="Teal"
                                    Click="ButtonDeleteParameter_Click"/>
                            <Separator Width="1" Background="{x:Null}"/>
                        </StackPanel>
                        <Separator Height="0" Background="{x:Null}"/>
                        <DataGrid x:Name="DataGridParameters" Background="LightSteelBlue" 
                                  CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="False"
                                  AutoGenerateColumns="False" HorizontalAlignment="Left"
                                  ColumnHeaderStyle="{StaticResource DataGridStyleColumnHeader}"
                                  RowStyle="{StaticResource DataGridStyleRow}"
                                  Width="{Binding Path=ActualWidth, ElementName=FormObjectMethod, Converter={local:ElementsFormConverter}, ConverterParameter='105'}"
                                  Height="{Binding Path=ActualHeight, ElementName=FormObjectMethod, Converter={local:ElementsFormConverter}, ConverterParameter='300'}">
                            <DataGrid.Columns>
                                <DataGridCheckBoxColumn Header="По значению" Binding="{Binding ByValue}" CanUserResize="False"/>
                                <DataGridTextColumn x:Name="ParametersColumnName" Header="Имя" Binding="{Binding Name}" MinWidth="100" MaxWidth="300">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell" BasedOn="{StaticResource MetroDataGridCell}">
                                            <Setter Property="ToolTip">
                                                <Setter.Value>
                                                    <ToolTip Content="{Binding Name}" Background="#FF6ABAC9"/>
                                                </Setter.Value>
                                            </Setter>
                                            <!--<Style.Triggers>
                                                <Trigger Property="ToolTip" Value="{x:Static s:String.Empty}">
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                </Trigger>
                                            </Style.Triggers>-->
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn x:Name="ColumnType" Header="Тип" MinWidth="150" MaxWidth="450" Binding="{Binding Type}" 
                                                    Width="{Binding Path=ActualWidth, ElementName=ColumnType, Converter={local:ElementsFormConverter}, ConverterParameter=28}">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell" BasedOn="{StaticResource MetroDataGridCell}">
                                            <Setter Property="ToolTip">
                                                <Setter.Value>
                                                    <ToolTip Content="{Binding Type}" Background="#FF6ABAC9"/>
                                                </Setter.Value>
                                            </Setter>
                                            <!--<Style.Triggers>
                                                <Trigger Property="ToolTip" Value="{x:Static s:String.Empty}">
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                </Trigger>
                                            </Style.Triggers>-->
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTemplateColumn x:Name="ColumnTypeButton" Width="25" CanUserReorder="False" CanUserResize="False" Visibility="Collapsed">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button x:Name="ButtonOpenFormParametersTypes" Content="..." Background="LightSteelBlue" BorderBrush="{x:Null}" HorizontalAlignment="Right" Width="22"
                                                        Click="ButtonOpenFormParametersTypes_Click">
                                                <Button.Style>
                                                    <Style>
                                                        <Setter Property="Button.Visibility" Value="Hidden"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=IsSelected}" Value="True">
                                                                <Setter Property="Button.Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="По умолчанию" Binding="{Binding ValueByDefault}" MinWidth="150" MaxWidth="450">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell" BasedOn="{StaticResource MetroDataGridCell}">
                                            <Setter Property="ToolTip">
                                                <Setter.Value>
                                                    <ToolTip Content="{Binding ValueByDefault}" Background="#FF6ABAC9"/>
                                                </Setter.Value>
                                            </Setter>
                                            <!--<Style.Triggers>
                                                <Trigger Property="ToolTip" Value="{x:Static s:String.Empty}">
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                </Trigger>
                                            </Style.Triggers>-->
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Описание" Binding="{Binding Description}" MinWidth="150" MaxWidth="250">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell" BasedOn="{StaticResource MetroDataGridCell}">
                                            <Setter Property="ToolTip">
                                                <Setter.Value>
                                                    <ToolTip Content="{Binding Description}" Background="#FF6ABAC9"/>
                                                </Setter.Value>
                                            </Setter>
                                            <!--<Style.Triggers>
                                                <Trigger Property="ToolTip" Value="{x:Static s:String.Empty}">
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                </Trigger>
                                            </Style.Triggers>-->
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </StackPanel>

                <Separator Height="1" Background="{x:Null}"/>

                <StackPanel Orientation="Horizontal">

                    <Label Content="Изменено" MinWidth="90"/>
                    <DatePicker Text="{Binding Path=DateEdited}" Background="LightSteelBlue" BorderBrush="Teal">
                        <DatePicker.Resources>
                            <Style TargetType="DatePickerTextBox">
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <TextBox Background="LightSteelBlue" 
                                                Text="{Binding Path=SelectedDate, StringFormat={}{0:dd-MM-yyyy HH:mm:ss}, RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DatePicker.Resources>
                    </DatePicker>

                    <Separator Width="5" Background="{x:Null}"/>

                    <Label Content="Создано" MinWidth="90"/>
                    <DatePicker Text="{Binding Path=DateCreation}" Background="LightSteelBlue" BorderBrush="Teal">
                        <DatePicker.Resources>
                            <Style TargetType="DatePickerTextBox">
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <TextBox Background="LightSteelBlue" 
                                                Text="{Binding Path=SelectedDate, StringFormat={}{0:dd-MM-yyyy HH:mm:ss}, RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DatePicker.Resources>
                    </DatePicker>

                </StackPanel>

                <Separator Height="1" Background="{x:Null}"/>

                <StackPanel x:Name="StackPanelClipboard" Orientation="Horizontal" Visibility="Collapsed">
                    <Label Content="Буфер обмена" MinWidth="90"/>
                    <TextBox x:Name="TextBoxClipboard" Background="LightSteelBlue" BorderBrush="Teal" IsReadOnly="True"
                             Width="{Binding Path=ActualWidth, ElementName=FormObjectMethod, Converter={local:ElementsFormConverter}, ConverterParameter='105'}"/>
                </StackPanel>

                <Separator Height="1" Background="{x:Null}"/>

            </StackPanel>
            <Separator Width="5" Background="{x:Null}"/>
        </StackPanel>
        <Separator Height="5" Background="{x:Null}"/>
    </Grid>

</Controls:MetroWindow>
